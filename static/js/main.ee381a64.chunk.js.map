{"version":3,"sources":["components/card/card-list.jsx","components/card-list-component/card-list-component.jsx","components/search/search.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monsters","id","name","email","Cardlist","map","Search","placeholder","handler","type","onChange","App","state","searchfeild","fetch","then","response","json","users","setState","this","filteredmonsters","filter","mons","toLowerCase","includes","e","target","value","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6SAGaA,G,YAAK,SAACC,GAAD,OAEd,sBAAKC,UAAU,iBAAf,UAEI,qBAAKC,IAAI,WAAWC,IAAG,+BAA0BH,EAAMI,SAASC,GAAzC,4BACvB,6BAAML,EAAMI,SAASE,OACrB,4BAAIN,EAAMI,SAASG,aCLdC,EAAW,SAAAR,GAAK,OACzB,qBAAKC,UAAU,YAAf,SACMD,EAAMI,SAASK,KAAI,SAAAL,GAAQ,OACzB,cAAC,EAAD,CAAwBA,SAAUA,GAAvBA,EAASC,UCJnBK,G,MACT,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,QAAd,OAEA,uBACCX,UAAU,YACVY,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC0CAG,G,wDAzCb,aAAc,IAAD,8BACb,gBAGKC,MAAM,CACTZ,SAAS,GACTa,YAAY,IAND,E,gEAWQ,IAAD,OAClBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAG,EAAKC,SAAS,CAACnB,SAASkB,S,+BAG/B,IAAD,SACyBE,KAAKR,MAA7BZ,EADD,EACCA,SAASa,EADV,EACUA,YAIVQ,EAAmBrB,EAASsB,QAAO,SAAAC,GAAI,OAAEA,EAAKrB,KAAKsB,cAAcC,SAASZ,EAAYW,kBAC9F,OACE,sBAAK3B,UAAU,MAAf,UACC,oBAAIA,UAAU,UAAd,6BAEC,cAAC,EAAD,CAAQU,YAAY,iBAAiBC,QAAS,SAAAkB,GAAC,OAAE,EAAKP,SAAS,CAACN,YAAYa,EAAEC,OAAOC,WAErF,cAAC,EAAD,CAAU5B,SAAUqB,W,GA9BRQ,IAAMC,YCETC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ee381a64.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card-list.css';\r\nexport const Card=(props)=>(\r\n\r\n    <div className=\"card-container\">\r\n    \r\n        <img alt=\"monsters\" src={`https://robohash.org/${props.monsters.id}?set=set2&size=180x180`}></img>\r\n        <h1 >{props.monsters.name}</h1>\r\n        <p>{props.monsters.email}</p>\r\n    </div>\r\n\r\n);","import React from 'react';\r\nimport './card-list.css';\r\nimport {Card} from '../card/card-list';\r\n\r\nexport const Cardlist = props =>(\r\n    <div className=\"card-list\">\r\n        { props.monsters.map(monsters=>(\r\n            <Card key={monsters.id} monsters={monsters}/>)) }\r\n    </div>\r\n);\r\n","import React from 'react';\r\nimport './search-style.css';\r\n\r\nexport const Search =\r\n    ({placeholder,handler})=>(\r\n        \r\n    <input\r\n     className=\"searchbar\" \r\n     type='search' \r\n     placeholder={placeholder} \r\n     onChange={handler} \r\n    />\r\n\r\n\r\n    );\r\n","import React from 'react'\n\nimport {Cardlist} from './components/card-list-component/card-list-component';\n\nimport {Search} from './components/search/search';\n\nimport './App.css';\n\n\n\nclass App extends React.Component {\n  constructor(){\n  super();\n  \n  \n  this.state={\n    monsters:[],\n    searchfeild:''\n\n  };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response=> response.json())\n    .then(users=> this.setState({monsters:users}));\n    //.then(users=>console.log(users.name))\n}\n  render(){\n    const {monsters,searchfeild} = this.state;\n    // const monsters = this.state.monsters;\n    // const searchfeild=this.state.searchfeild;\n\n    const filteredmonsters = monsters.filter(mons=>mons.name.toLowerCase().includes(searchfeild.toLowerCase()))\n  return (\n    <div className=\"App\">\n     <h1 className=\"monster\">Monster Roldex </h1>\n\n      <Search placeholder='search Monster' handler={e=>this.setState({searchfeild:e.target.value})}/>\n      \n      <Cardlist monsters={filteredmonsters}/>\n      \n      {/* now this card list will act as parameters to the parent one the one with all the css and files */}\n      {/* so map functions works like a for each loop it calls the function for \n      every value in the array  */}\n\n\n    </div>\n  );\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}